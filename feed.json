{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "My Web Development Blog",
  "language": "en",
  "home_page_url": "http://localhost:8080/",
  "feed_url": "http://localhost:8080/feed.json",
  "description": "Tell the word what you are writing about in your blog. It will show up on feed readers.",
  "authors": [
    {
      "name": "Cosma Ioan"
    }
  ],
  "items": [{
      "id": "http://localhost:8080/blog/raising-a-ephemeral-vm-with-terraform-and-tailscale/",
      "url": "http://localhost:8080/blog/raising-a-ephemeral-vm-with-terraform-and-tailscale/",
      "title": "Raising a ephemeral vm with Terraform and tailscale",
      "content_html": "<h1 id=\"why\"><a href=\"#why\" class=\"heading-anchor\">Why ?</a></h1><ul class=\"list\"><li>To be able to spin on demand a Azure Vm with minimal cost and in a secure way</li><li>As a way to learn terraform</li><li>to be able to build on the vm to experiment with different tools. Ex: worker that needs to access S3 bucket.</li></ul><h1 id=\"how\"><a href=\"#how\" class=\"heading-anchor\">How ?</a></h1><h2 id=\"tools\"><a href=\"#tools\" class=\"heading-anchor\">Tools</a></h2><ul class=\"list\"><li>Terraform</li><li>Tailscale</li><li>az cli</li></ul>",
      "date_published": "2025-03-30T00:00:00Z"
    }
    ,{
      "id": "http://localhost:8080/blog/eleventy-excellent-40/",
      "url": "http://localhost:8080/blog/eleventy-excellent-40/",
      "title": "Eleventy Excellent 4.0",
      "content_html": "<p>A new version is here! This includes a bunch of breaking changes.<br>Again I am changing the body font for this update, this time it‚Äôs <a href=\"https://www.brailleinstitute.org/freefont/\" rel=\"noopener\">Atkinson Hyperlegible</a>.</p><h2 id=\"new-image-handling\"><a href=\"#new-image-handling\" class=\"heading-anchor\">New Image handling</a></h2><p>I have been clinging to my image shortcode for too long. With the <a href=\"https://github.com/11ty/eleventy-img/releases/tag/v6.0.0\" rel=\"noopener\">latest major version of Eleventy Image</a> I decided it‚Äôs finally time to also include the transform method, because it is awesome.</p><p>That alone would not be a breaking change, but I decided to change the existing Nunjucks image shortcode a bit. If you use the shortcode beyond the container class, you must adjust your code to these changes:</p><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span> src<span class=\"token punctuation\">,</span>\n  alt <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  caption <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  loading <span class=\"token operator\">=</span> <span class=\"token string\">'lazy'</span><span class=\"token punctuation\">,</span>\n  containerClass<span class=\"token punctuation\">,</span>\n  imageClass<span class=\"token punctuation\">,</span>\n  widths <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">960</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1400</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  sizes <span class=\"token operator\">=</span> <span class=\"token string\">'auto'</span><span class=\"token punctuation\">,</span>\n  formats <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'avif'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'webp'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'jpeg'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span></code></pre><ul class=\"list\"><li><strong>Breaking:</strong> <code>widths</code> is now passed in <em>before</em> <code>sizes</code> (because I change this value much more often).</li><li><strong>Breaking:</strong> <code>imageClass</code> is a new paramteter dedicated to the <code>&lt;img&gt;</code> element, while <code>containerClass</code> is for the container (<code>&lt;figure&gt;</code> or <code>&lt;picture&gt;</code>), as before.</li><li>also new: for all images you can start the path relative to the input folder (drop <code>./src</code> in the path, though it is compatible with <code>./src</code> being present)</li></ul><p>Using the transform comes with the great advantage, that you can now use co-located images with the HTML and Markdown sytnax. üéâ</p><p>For a detailed overview of the new image possibilities <a href=\"/blog/post-with-an-image/\">see the dedicated blog post</a>.</p><h2 id=\"cascade-layers\"><a href=\"#cascade-layers\" class=\"heading-anchor\">Cascade layers</a></h2><p><a href=\"https://mayank.co/blog/css-reset-layer/\" rel=\"noopener\">Inspired by Mayank‚Äôs post</a>, I‚Äôve transitioned to using <a href=\"https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Styling_basics/Cascade_layers\" rel=\"noopener\">cascade layers</a>, instead of using the <code>:where()</code> pseudo-class to create low-specificity selectors for resets and compositions.</p><ul class=\"list\"><li>The global CSS bundle is now organized with cascade layers.</li><li>The local CSS bundle, used for per-page or component-specific styles, does not utilize cascade layers. As a result, all CSS blocks included have a higher specificity than global styles, regardless of the selector specificity in the global CSS bundle.</li></ul><p><strong>Breaking:</strong> The ‚Äúinline‚Äù bundle is now called ‚Äúlocal‚Äù, as this made more sense: all bundles are inlined.</p><h2 id=\"new-color-system\"><a href=\"#new-color-system\" class=\"heading-anchor\">New color system</a></h2><p>Run <code>npm run colors</code> after defining your base color values in <code>src/_data/designTokens/colorsBase.json</code>. This will generate or update the <code>colors.json</code> file in the same directory.</p><ul class=\"list\"><li>Colors under <code>shades_neutral</code> or <code>shades_vibrant</code> are converted into scalable palettes. This is not very elaborate, use a value more or less in the middle of the scale. Happy to receive suggestions for improvements.</li><li>Colors listed under <code>standalone</code> and <code>light_dark</code> are left as they are, <code>light_dark</code> items output a second ‚Äúsubdued‚Äù version optimized for dark themes.</li></ul><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token comment\">// this creates a palette with shades of green, 100 to 900</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"shades_vibrant\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"green\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#008000\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre><p><code>src/assets/css/global/base/variables.css</code> changed a lot, as I now use new color names. I also dropped the <code>@supports</code> blocks for <code>color-mix()</code> and the relative color syntax ‚Äì not because they aren‚Äôt great, but I just perceived the whole file as too complex. Now JavaScript does the step of creating subdued colors for the dark theme.</p><p>I also considered using the new <code>light-dark()</code> CSS function instead of the repetitive code for <code>prefers-color-scheme</code> and <code>data-theme=‚Äúdark‚Äù</code>, but the browser support is still too low.</p><p><strong>Breaking:</strong>: <code>src/assets/css/global/base/variables.css</code> changed. You must adapt your colors in <code>src/_data/designTokens/colorsBase.json</code> if you want to use the <code>npm run colors</code> script.</p><p>You can also just completely skip that and define your colors directly in <code>colors.json</code> (I recommend deleting the <code>colors</code> command in <code>package.json</code> in this case, so you don‚Äôt unitentionally overwrite your work).</p><p><a href=\"/get-started/#design-tokens\">More about colors here</a>.</p><h2 id=\"new-button-styles\"><a href=\"#new-button-styles\" class=\"heading-anchor\">New button styles</a></h2><p>Inspired by <a href=\"https://piccalil.li/blog/how-i-build-a-button-component/\" rel=\"noopener\">Andy‚Äôs article</a>, the button styles changed. As the article explains that very well, I won‚Äôt say much more about it.</p><h2 id=\"other-new-features-and-changes\"><a href=\"#other-new-features-and-changes\" class=\"heading-anchor\">Other new features and changes</a></h2><ul class=\"list\"><li><code>border-radius</code> became a design token used by the Tailwind config, to be set in <code>src/_data/designTokens/borderRadius.json</code>.</li><li>new <code>3XS</code> spacing value in <code>src/_data/designTokens/spacing.json</code>.</li><li>new <code>grid</code> composition layout <code>data-layout='thirds</code>.</li><li>new OG images template. As it uses <code>meta.siteName</code> next to the 11ty Logo, you might have to adjust the template for that <code>src/common/og-images.njk</code>.</li></ul><p>Let me know if you have any questions or issues with the update.<br>I am happy to help you out. Maybe you‚Äôll want to wait a bit, as I will add some more fixes, no doubt.</p>",
      "date_published": "2025-01-11T00:00:00Z"
    }
    ,{
      "id": "http://localhost:8080/blog/post-with-an-image/",
      "url": "http://localhost:8080/blog/post-with-an-image/",
      "title": "Post with an image",
      "content_html": "<p>Using the powerful Eleventy Image plugin, we have three ways to optimize images: HTML Transform, Markdown syntax, and a Nunjucks shortcode.</p><h2 id=\"html-transform\"><a href=\"#html-transform\" class=\"heading-anchor\">HTML Transform</a></h2><p>Transforms any <code>&lt;img&gt;</code> or <code>&lt;picture&gt;</code> tags in HTML files as a post-processing step. Find the default settings directly in <code>eleventy.config.js</code>.</p><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./co-located-image.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>alt text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/assets/images/absolute-path-image.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>alt text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre><p>We can pass in overrides for every instance and use attributes. By default all images are set to be lazy loaded, but we can override this by directly setting <code>loading=\"eager\"</code> and <code>decoding=\"sync\"</code>on the <code>&lt;img&gt;</code> element.</p><p>Another thing to note is the <code>widths: ['auto']</code> setting, which by default only includes the original size image. You can set the dedicated <code>widths</code> to be used by adding <code>eleventy:widths=\"800,1200\"</code> on the element. For images with <a href=\"/blog/post-with-an-image/#markdown-syntax\">Markdown syntax</a>, I set fixed <code>widths</code> so we don‚Äôt need to set a value on every instance.</p><p><code>sizes</code> defaults to <code>auto</code>, which is applied to all lazy loading images. For eager-loading images, the value is equivalent to <code>100vw</code> See: <a href=\"https://github.com/whatwg/html/pull/8008\" rel=\"noopener\">https://github.com/whatwg/html/pull/8008</a>. We can <em>still</em> overwrite this, by setting the <code>sizes</code> attribute directly on the <code>&lt;img&gt;</code> element, with something specific like <code>sizes=\"(max-width: 615px) 50vw, 100vw\"</code>.</p><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./co-located-image.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>alt text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">eleventy:</span>widths</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200,600<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">loading</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>eager<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">decoding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sync<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span></code></pre><picture><source type=\"image/webp\" srcset=\"/blog/post-with-an-image/F54o5PK949-200.webp 200w, /blog/post-with-an-image/F54o5PK949-600.webp 600w\" sizes=\"(max-width: 615px) 50vw, 100vw\"><img loading=\"eager\" decoding=\"sync\" src=\"/blog/post-with-an-image/F54o5PK949-200.jpeg\" alt=\"A picturesque valley showcasing majestic mountains and lush forests, creating a serene and captivating landscape\" width=\"600\" height=\"450\" srcset=\"/blog/post-with-an-image/F54o5PK949-200.jpeg 200w, /blog/post-with-an-image/F54o5PK949-600.jpeg 600w\" sizes=\"(max-width: 615px) 50vw, 100vw\"></picture><p>This makes this syntax equally powerfull as the <a href=\"/blog/post-with-an-image/#nunjucks-shortcode\">shortcode</a>, and easier to read - with the extra benefit that we can use both relative and absolute image sources.<br>Only ‚Äúdownside‚Äù ist, that it comes with a higher build cost due to the post-processing step.</p><p>More info: <a href=\"https://www.11ty.dev/docs/plugins/image/#html-transform\" rel=\"noopener\">https://www.11ty.dev/docs/plugins/image/#html-transform</a></p><h2 id=\"markdown-syntax\"><a href=\"#markdown-syntax\" class=\"heading-anchor\">Markdown syntax</a></h2><p>This also uses <a href=\"https://www.11ty.dev/docs/plugins/image/#html-transform\" rel=\"noopener\">Image HTML Transform </a>.<br>The markdown sytnax for images creates the <code>&lt;img&gt;</code> element the plugin is looking for, and then transforms it to the <code>&lt;picture&gt;</code> element (if more than one format is set).</p><p>In <code>src/_config/plugins/markdown.js</code> I customized the Markdown rendering for images slightly. What normally would become a <code>title</code> attribute is used to create a caption. Note that I set a fixed <code>widths</code> value instead of <code>auto</code> as the default.</p><pre class=\"language-markdown\"><code class=\"language-markdown\">![alt text](/path/to/image 'caption text')\n<span class=\"token url\"><span class=\"token operator\">!</span>[<span class=\"token content\">Close-up with unfocused background of a vibrant large blue butterfly gracefully perched on a delicate flower amidst lush green gras</span>](<span class=\"token url\">/assets/images/gallery/asturias-4.jpg</span>)</span> 'I used a portrait lens for this one'</code></pre><p></p><figure><picture><source type=\"image/webp\" srcset=\"/img/EHwkdjzoWm-650.webp 650w, /img/EHwkdjzoWm-960.webp 960w, /img/EHwkdjzoWm-1400.webp 1400w\" sizes=\"auto\"><img loading=\"lazy\" decoding=\"async\" src=\"/img/EHwkdjzoWm-650.jpeg\" alt=\"Close-up with unfocused background of a vibrant large blue butterfly gracefully perched on a delicate flower amidst lush green gras\" title=\"I used a portrait lens for this one\" width=\"1400\" height=\"930\" srcset=\"/img/EHwkdjzoWm-650.jpeg 650w, /img/EHwkdjzoWm-960.jpeg 960w, /img/EHwkdjzoWm-1400.jpeg 1400w\" sizes=\"auto\"></picture><figcaption>I used a portrait lens for this one</figcaption></figure><p></p><p>You can also add custom attributes here (<a href=\"https://www.aleksandrhovhannisyan.com/blog/eleventy-image-transform/\" rel=\"noopener\">Kudos to Aleksandr</a>), to overwrite the default <code>widths</code>, have the image eagerly loaded, or add a class etc.</p><pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token url\"><span class=\"token operator\">!</span>[<span class=\"token content\">alt text</span>](<span class=\"token url\">/path/to/image</span>)</span>{attrs}\n<span class=\"token url\"><span class=\"token operator\">!</span>[<span class=\"token content\">Close-up of a delicate white flower with a yellow center, surrounded by green leaves</span>](<span class=\"token url\">/assets/images/gallery/asturias-2.jpg</span>)</span>{loading=\"eager\" decoding=\"sync\" eleventy:widths=\"400\" class=\"grayscale\"}</code></pre><p><picture><source type=\"image/webp\" srcset=\"/img/uGGG43jjos-400.webp 400w\" sizes=\"auto\"><img loading=\"eager\" decoding=\"sync\" src=\"/img/uGGG43jjos-400.jpeg\" alt=\"Close-up of a delicate white flower with a yellow center, surrounded by green leaves\" width=\"400\" height=\"265\" class=\"grayscale\"></picture></p><h2 id=\"nunjucks-shortcode\"><a href=\"#nunjucks-shortcode\" class=\"heading-anchor\">Nunjucks shortcode</a></h2><p>The most basic version contains the path to the image (absolute) and alt text (can be an empty string if the image is decorative).</p><pre class=\"language-jinja2\"><code class=\"language-jinja2\"><span class=\"token jinja2 language-jinja2\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">image</span> <span class=\"token string\">\"path to image\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"alt text\"</span> <span class=\"token delimiter punctuation\">%}</span></span></code></pre><p>It defaults to <code>loading = 'lazy'</code>, the picture element gets its set of images from <code>widths=[650,960,1400]</code> and compares to a condition of <code>sizes=\"auto\"</code>.<br>You can pass in manually all the conditions, add <code>null</code> to skip. The arguments include classes for the outer container ( <code>&lt;picture&gt;</code> or <code>&lt;figure&gt;</code> element), and for the <code>&lt;img&gt;</code> element.</p><p>The shortcode is stored in <code>src/_config/shortcodes/image.js</code>.</p><pre class=\"language-jinja2\"><code class=\"language-jinja2\"><span class=\"token jinja2 language-jinja2\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">image</span> <span class=\"token string\">\"path to image\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"alt text\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"caption text\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"eager\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"container class names\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"img class names\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"(min-width:30em) 50vw, 100vw\"</span> <span class=\"token delimiter punctuation\">%}</span></span>\n<span class=\"token jinja2 language-jinja2\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">image</span> <span class=\"token string\">\"path to image\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"alt text\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"eager\"</span> <span class=\"token delimiter punctuation\">%}</span></span></code></pre><figure slot=\"image\" class=\"text-center\"><picture><source type=\"image/avif\" srcset=\"/assets/images/asturias-3-200w.avif 200w, /assets/images/asturias-3-400w.avif 400w\" sizes=\"(min-width:30em) 50vw, 100vw\"><source type=\"image/webp\" srcset=\"/assets/images/asturias-3-200w.webp 200w, /assets/images/asturias-3-400w.webp 400w\" sizes=\"(min-width:30em) 50vw, 100vw\"><source type=\"image/jpeg\" srcset=\"/assets/images/asturias-3-200w.jpeg 200w, /assets/images/asturias-3-400w.jpeg 400w\" sizes=\"(min-width:30em) 50vw, 100vw\"><img src=\"/assets/images/asturias-3-400w.jpeg\" width=\"400\" height=\"265\" alt=\"A traditional Asturian village with it's raised granaries, surrounded by lush green hills and mountains\" loading=\"lazy\" decoding=\"async\" eleventy:ignore class=\"grayscale\"></picture><figcaption>What a nice old house in black and white</figcaption></figure><p>Example: predefine <code>widths</code> and <code>sizes</code> using Nunjuck‚Äôs <code>set</code> tag or front matter fields, and dynamically get the image path, like I do in the built-with template.</p><pre class=\"language-jinja2\"><code class=\"language-jinja2\"><span class=\"token jinja2 language-jinja2\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">image</span> <span class=\"token string\">\"/assets/images/screenshots/\"</span> <span class=\"token operator\">+</span> <span class=\"token variable\">site</span><span class=\"token punctuation\">.</span><span class=\"token variable\">filename</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">site</span><span class=\"token punctuation\">.</span><span class=\"token variable\">name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lazy\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">null</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">null</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">widths</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">sizes</span> <span class=\"token delimiter punctuation\">%}</span></span></code></pre><h2 id=\"comparing-shortcode-and-html-transform\"><a href=\"#comparing-shortcode-and-html-transform\" class=\"heading-anchor\">Comparing Shortcode and HTML Transform</a></h2><p>The shortcode can be much terser than the HTML syntax. It also includes the <code>slot=\"image\"</code> attribute for seamless WebC component integration. However, it‚Äôs less readable, and you must carefully order all arguments. On the other hand, the HTML syntax is much more readable and easier to maintain.</p><p>As for the higher build cost of post-processing, the shortcode images are being skipped using the <code>eleventy:ignore</code> attribute, but still seem to be processed somehow. I have yet to figure out if this is avoidable. If you set the <code>eleventy:ignore</code> on an HTML image though, it <em>is</em> completely skipped and excluded from the processed images.</p><p><strong>These two approaches produce (almost) the same output:</strong></p><pre class=\"language-jinja2\"><code class=\"language-jinja2\"><span class=\"token jinja2 language-jinja2\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">image</span> <span class=\"token variable\">image</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">alt</span> <span class=\"token keyword\">or</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">credit</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"eager\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"feature\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"grayscale\"</span> <span class=\"token delimiter punctuation\">%}</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>figure</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>feature<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token jinja2 language-jinja2\"><span class=\"token delimiter punctuation\">{{</span> <span class=\"token variable\">image</span> <span class=\"token delimiter punctuation\">}}</span></span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token jinja2 language-jinja2\"><span class=\"token delimiter punctuation\">{{</span> <span class=\"token variable\">alt</span> <span class=\"token keyword\">or</span> <span class=\"token string\">''</span> <span class=\"token delimiter punctuation\">}}</span></span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">loading</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>eager<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">decoding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sync<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grayscale<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token jinja2 language-jinja2\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">if</span> <span class=\"token variable\">credit</span> <span class=\"token delimiter punctuation\">%}</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>figcaption</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token jinja2 language-jinja2\"><span class=\"token delimiter punctuation\">{{</span> <span class=\"token variable\">credit</span> <span class=\"token delimiter punctuation\">}}</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>figcaption</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token jinja2 language-jinja2\"><span class=\"token delimiter punctuation\">{%</span> <span class=\"token tag keyword\">endif</span> <span class=\"token delimiter punctuation\">%}</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>figure</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre><figure slot=\"image\" class=\"feature\"><picture><source type=\"image/avif\" srcset=\"/assets/images/asturias-1-650w.avif 650w, /assets/images/asturias-1-960w.avif 960w, /assets/images/asturias-1-1400w.avif 1400w\" sizes=\"auto\"><source type=\"image/webp\" srcset=\"/assets/images/asturias-1-650w.webp 650w, /assets/images/asturias-1-960w.webp 960w, /assets/images/asturias-1-1400w.webp 1400w\" sizes=\"auto\"><source type=\"image/jpeg\" srcset=\"/assets/images/asturias-1-650w.jpeg 650w, /assets/images/asturias-1-960w.jpeg 960w, /assets/images/asturias-1-1400w.jpeg 1400w\" sizes=\"auto\"><img src=\"/assets/images/asturias-1-1400w.jpeg\" width=\"1400\" height=\"1050\" alt=\"A picturesque valley showcasing majestic mountains and lush forests, creating a serene and captivating landscape\" loading=\"eager\" decoding=\"sync\" eleventy:ignore class=\"grayscale\"></picture><figcaption>A photo I took.</figcaption></figure><figure class=\"feature\"><picture><source type=\"image/webp\" srcset=\"/img/F54o5PK949-2000.webp 2000w\" sizes=\"auto\"><img loading=\"eager\" decoding=\"sync\" src=\"/img/F54o5PK949-2000.jpeg\" alt=\"A picturesque valley showcasing majestic mountains and lush forests, creating a serene and captivating landscape\" width=\"2000\" height=\"1500\" class=\"grayscale\"></picture><figcaption>A photo I took.</figcaption></figure><p>More:</p><ul class=\"list\"><li><a href=\"https://www.11ty.dev/docs/plugins/image/\" rel=\"noopener\">https://www.11ty.dev/docs/plugins/image/</a></li><li><a href=\"https://www.youtube.com/watch?v=e0OHgC677ec\" rel=\"noopener\">https://www.youtube.com/watch?v=e0OHgC677ec</a></li><li><a href=\"https://www.aleksandrhovhannisyan.com/blog/eleventy-image-transform/\" rel=\"noopener\">https://www.aleksandrhovhannisyan.com/blog/eleventy-image-transform/</a></li><li><a href=\"https://coryd.dev/posts/2024/setting-up-image-transforms-in-eleventy\" rel=\"noopener\">https://coryd.dev/posts/2024/setting-up-image-transforms-in-eleventy</a></li></ul>",
      "date_published": "2025-01-09T00:00:00Z"
    }
    
  ]
}